<UserControl
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        xmlns:i1="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
        x:Class="WPF_Tranning.View.TwoGridControlView"
        mc:Ignorable="d"
        Name="GridControlViewName" Height="831" Width="1266"
        xmlns:vm="clr-namespace:WPF_Tranning" 
        xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls">

    <UserControl.Resources>
        <Style x:Key="RowStyle" TargetType="{x:Type dxg:GridRowContent}">
            <Setter Property="Background" Value="Red" />
        </Style>

    </UserControl.Resources>

    <UserControl.DataContext>
        <vm:TwoGridControlVM/>
    </UserControl.DataContext>

    <Grid>


        <!--꼭 그리드 컨트롤이나 특정 태그 안에 넣어야 하는건 아님 이런식으로 가능-->
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Unloaded">
                <!--언 로드시 바인딩-->
                <i:InvokeCommandAction Command="{Binding UnloadDataCheck}"  
                                           CommandParameter="{Binding ElementName=GirdControlBand, Mode=OneWay}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <Grid.RowDefinitions>
            <RowDefinition Height="90" />
            <RowDefinition Height="10*" />
            <RowDefinition Height="20" />
        </Grid.RowDefinitions>


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="650"/>
            <ColumnDefinition Width="10*"/>

        </Grid.ColumnDefinitions>


        <!--<controls:GridSplitter Width="11" ResizeBehavior="BasedOnAlignment" ResizeDirection="Auto"
        Background="Gray" Foreground="White" FontSize="13">
            <controls:GridSplitter.Element>
                <Grid>
                    <TextBlock HorizontalAlignment="Center"  IsHitTestVisible="False"
                    VerticalAlignment="Center" Text="&#xE784;"
                    Foreground="Black" FontFamily="Segoe MDL2 Assets"/>
                </Grid>
            </controls:GridSplitter.Element>
        </controls:GridSplitter>-->



        <dxg:GridControl  Grid.Column="0" Grid.Row="1"  SelectionMode="Row" SelectedItem="{Binding SelectEvent}" 
                          AutoGenerateColumns="None" x:Name="gridcontrol1"  
                          ItemsSource="{Binding GetScoreInfomation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Margin="80,25,40,347" 
                          >
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:EventToCommand Command="{Binding IGridControl1Loaded}"  
                               EventName="Loaded" CommandParameter="{Binding ElementName=gridcontrol1}">
                    <dxmvvm:EventToCommand.EventArgsConverter>
                        <dx:EventArgsToDataCellConverter/>
                    </dxmvvm:EventToCommand.EventArgsConverter>
                </dxmvvm:EventToCommand>
            </dxmvvm:Interaction.Behaviors>
            
            <dxg:GridControl.View>

                <dxg:TableView x:Name="ScoreDBTableView">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged" >
                            <i:InvokeCommandAction Command="{Binding SelectEvent}" CommandParameter="{Binding ElementName=scoreListViewD2B, Mode=OneWay}" />
                        </i:EventTrigger>

                        <!--<i:EventTrigger EventName="Loaded">
                            --><!--로드시 바인딩--><!--
                            <i:InvokeCommandAction Command="{Binding IGridControl1Loaded}"  CommandParameter="{Binding ElementName=gridcontrol1, Mode=OneWay}"/>
                        </i:EventTrigger>-->
                    </i:Interaction.Triggers>


              

                    <!--NuGet관리자에서 Install-Package Expression.Blend.Sdk 
                    Install-Package Microsoft.Xaml.Behaviors.Wpf -Version 1.1.31 2개 설치해야 interaction.Triggers 설치 됨-->
                    <!--오류있어서 잠시보류-->

                    <!--셀값 변경 추가-->
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:EventToCommand Command="{Binding CellValueChangedCommand}"  
                               EventName="CellValueChanged" CommandParameter="{Binding ElementName=scoreListViewD2B}">
                            <dxmvvm:EventToCommand.EventArgsConverter>
                                <dx:EventArgsToDataCellConverter/>
                            </dxmvvm:EventToCommand.EventArgsConverter>
                        </dxmvvm:EventToCommand>
                    </dxmvvm:Interaction.Behaviors>

                </dxg:TableView>
            </dxg:GridControl.View>

            <!--체크박스 및 체크박스 영역, 컬럼-->
            <dxg:GridColumn FieldName="Check" Header="체크박스" Width="100" VisibleIndex="0">
                <dxg:GridColumn.EditSettings>
                    <dxe:CheckEditSettings/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>

            <dxg:GridColumn Width="auto" FieldName="Score_id" Header="스코어번호">

                <dxg:GridColumn.EditSettings>
                    <!--text 왼쪽 정렬-->
                    <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>

            <dxg:GridColumn Width="auto" FieldName="Score" Header="스코어점수" >
                <dxg:GridColumn.EditSettings>
                    <dxe:TextEditSettings  HorizontalContentAlignment="Left"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>

            <!-- 컬럼 추가시 읽기전용으로 되서 일단 주석처리함-->
            <!--체크박스 및 체크박스 영역, 컬럼-->

        </dxg:GridControl>
        <!--체크박스 샘플 
            https://johnnblade.wordpress.com/2012/05/24/grid-control-gridcontrol-with-celltemplate-and-checkbox-or-checkedit-unchecks-or-checks-other-unchecked-checkboxes-when-scrolling-or-checkbox-comes-up-when-new-visual-rows-displays-devexpress-wpf/
            -->
        <!-- DB내용 View -->
        <dxg:GridControl   Grid.Column="1" Grid.Row="1" Background="LightYellow" 
                           x:Name="GridControl2" AutoGenerateColumns="AddNew" 
                           Margin="30,25,41,347" ItemsSource="{Binding Select_Score, Mode=TwoWay,  
                            UpdateSourceTrigger=PropertyChanged}">
            <dxg:GridControl.View>
                <dxg:TableView ShowTotalSummary="True" />
            </dxg:GridControl.View>


            <!--체크박스 및 체크박스 영역, 컬럼-->
            <dxg:GridColumn  FieldName="Check" Header="체크박스" Width="100" VisibleIndex="0">
                <dxg:GridColumn.EditSettings>
                    <dxe:CheckEditSettings/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>

            <dxg:GridColumn  FieldName="Score_id" Header="스코어번호"/>
            <dxg:GridColumn FieldName="Score" Header="스코어점수" />


        </dxg:GridControl>
        
        <Button CommandParameter="{Binding ElementName=scoreListViewD2B}" Command="{Binding AddColumn}"  x:Name="addColumn" Content="추가" HorizontalAlignment="Left" Margin="535,58,0,0" VerticalAlignment="Top" Width="75"/>
        <Grid Margin="0,10,10,0" Grid.Column="1" Grid.RowSpan="1" HorizontalAlignment="Right" Width="546">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="590"/>
                <ColumnDefinition Width="110"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="80"/>
                <RowDefinition Height="100"/>
            </Grid.RowDefinitions>
            <Button Command="{Binding SaveExcel}" CommandParameter="{Binding ElementName=addColumn}" 
                Margin="0,61,-730,97" Grid.Column="1" HorizontalAlignment="Right" Width="75" Content="엑셀저장" Grid.RowSpan="2"/>
        </Grid>

        <!--내부적으로 선택한 값 - ValueMember -->
        <!--화면에 보여질 선택할 값 - DisplayMember -->
        <!--DB로 불러와 DataTable로 사용할 경우 DB에서 사용한 컬럼명을 쓰면 됨
        
         ValueMember="Code" 
         DisplayMember="Name" 
        -->


        <Button Command="{Binding GetBindingScoreInfomation}" Margin="0,384,41,310" Grid.Row="1" Grid.Column="1" 
                HorizontalAlignment="Right" Width="105">바인딩 요청</Button>
        <Button CommandParameter="{Binding ElementName=GridControl2}" Command="{Binding AddColumn2}"  x:Name="addColumn_Copy1" Content="추가2" HorizontalAlignment="Left" Margin="500,58,0,0" VerticalAlignment="Top" Width="75" Grid.Column="1"/>



        <!--<dx:WaitIndicator Content="Loading...">
            <dx:WaitIndicator.ContentTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Please Wait" FontSize="20"/>
                        <TextBlock Text="{Binding WaitIndicatorText}"/>
                    </StackPanel>
                </DataTemplate>
            </dx:WaitIndicator.ContentTemplate>
        </dx:WaitIndicator>-->

    </Grid>


</UserControl>
